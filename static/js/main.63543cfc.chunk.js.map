{"version":3,"sources":["comps/searchBar.js","comps/weatherIcon.js","comps/cardWeather.js","comps/cardLoading.js","comps/unitOptions.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","marginTop","spacing","marginBottom","margin","textField","width","AlertInfo","props","elevation","variant","SearchBar","classes","useState","alert","setAlert","handleClose","event","reason","Fragment","className","Grid","container","direction","justify","alignItems","item","xs","md","TextField","error","id","label","autoComplete","e","setQuery","target","value","query","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","search","edge","Snackbar","anchorOrigin","vertical","horizontal","transitionDuration","enter","open","onClose","severity","WeatherIcon","description","day","console","log","class","flagIcon","height","marginLeft","location","display","flexDirection","justifyContent","flexWrap","time","mainTemp","maxMinTemp","desc","media","feelsLike","row","HeaderImage","CardMedia","image","title","CardWeather","weather","sm","Card","CardContent","Typography","gutterBottom","component","style","fontWeight","marginRight","name","country","Avatar","alt","ca","src","toLowerCase","color","localTime","maxTemp","unit","minTemp","temp","humidity","precipitation","windSpeed","unit2","pressure","CardLoading","Skeleton","animation","radioContainer","text","UnitOptions","FormControl","RadioGroup","onChange","handleChange","FormControlLabel","control","Radio","disableRipple","radio","checked","api","App","lat","lon","setCoordinates","setDay","setError","sunrise","sunset","forecast","setWeather","loading","setLoading","setLocalTime","system","setSystem","setUnit","setUnit2","useEffect","getData","getLocationData","a","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","toFixed","Number","fetch","res","json","result","getTime","city","timezone","checkWindDirection","list","wind","deg","speed","main","temp_min","temp_max","feels_like","pop","dateBuilder","includes","cod","short","length","country_code","slice","city_name","offset","local_date","Date","utc","getTimezoneOffset","nd","toLocaleTimeString","suffix","time_nd","getDate","hour","getHours","toString","mins","getMinutes","month","getMonth","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.63543cfc.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport SearchIcon from '@material-ui/icons/Search';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginTop:theme.spacing(5),\n        marginBottom:theme.spacing(3),\n    },\n    margin: {\n        margin: theme.spacing(1),\n    },\n    textField: {\n        width:\"250px\",\n    },\n  }));\n\n  function AlertInfo(props){\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\nconst SearchBar = ({props}) => {\n    const classes = useStyles();\n\n    const [ alert, setAlert ] = useState(true)\n\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n    \n        setAlert(false);\n      };\n\n    return(\n   <React.Fragment>\n        <div className={classes.root}>  \n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    >\n                        <Grid item xs={9} md={4}>\n                        <TextField \n                            error\n                            id=\"filled-basic\" \n                            label=\"Search...\" \n                            variant=\"filled\" \n                            autoComplete='off'\n                            error = {(props.error) ? true : false}\n                            onChange = {e => props.setQuery(e.target.value)}\n                            value = {props.query}\n                            helperText={(props.error) ? \"Enter a valid location\" : \"Enter a city to begin\"}\n                            fullWidth\n                            InputProps={{\n                                endAdornment: \n                                <InputAdornment position=\"end\">\n                                     <IconButton\n                                        aria-label=\"search input\"\n                                        onClick={props.search}\n                                        edge=\"end\"\n                                        >\n                                            <SearchIcon/>\n                                    </IconButton>\n                                </InputAdornment>,\n                            }}/>  \n                        </Grid>\n                </Grid>  \n    </div>\n\n    <div>\n        <Snackbar anchorOrigin={{vertical:'bottom',horizontal:'center'}} transitionDuration={{enter:3000}} open={alert} onClose={handleClose}>\n            <AlertInfo onClose={handleClose} severity=\"info\">\n                Tip: If you don't see the place you entered, try adding its country or zip code at the end, Ex: Alberta, CA\n            </AlertInfo>\n        </Snackbar>\n    </div>\n\n   </React.Fragment>\n    )\n}\n\nexport default SearchBar;","import React from 'react';\n\nconst WeatherIcon = ({description, day}) => {\n    console.log(day)\n    if(description===\"Clear\"){\n        if(day){\n          console.log('Should display')\n          return(\n            <div className=\"Clear\">\n                <i class=\"fas fa-sun\"></i>\n            </div>\n          )\n        }\n        else{\n          return(\n            <div className=\"night\">\n                <i class=\"fas fa-moon\"></i>\n            </div>\n          )\n        }\n      }\n      else if(description===\"Drizzle\"){\n        return(\n          <div className=\"Drizzle\">\n              <i class=\"fas fa-cloud-rain\"></i>\n          </div>\n        )\n      }\n      else if(description===\"Rain\"){\n        return(\n          <div className=\"Rain\">\n              <i class=\"fas fa-cloud-showers-heavy\"></i>\n          </div>\n        )\n      }\n      else if(description===\"Thunderstorm\"){\n        return(\n          <div className=\"Thunderstorm\">\n              <i class=\"fas fa-cloud-showers-heavy\"></i>\n          </div>\n        )\n      }\n      else if(description===\"Clouds\"){\n        if(day){\n         return(\n          <div className=\"Clouds-morning\">\n          <i class=\"fas fa-cloud\"></i>\n        </div>\n         )\n        }\n        else{\n          return(\n            <div className={description}>\n                <i class=\"fas fa-cloud\"></i>\n            </div>\n          )\n        }\n      }\n      else{\n        return(\n          <div className={description}>\n              <i class=\"fas fa-smog\"></i>\n          </div>\n        )\n      }\n}\n\nexport default WeatherIcon;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport Avatar from '@material-ui/core/Avatar';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport WeatherIcon from './weatherIcon';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginBottom:theme.spacing(5),\n    },\n    flagIcon:{\n        // marginTop: theme.spacing(0.5),\n        width: theme.spacing(4),\n        height: theme.spacing(4),\n        marginLeft: theme.spacing(0.2)\n    },\n    location:{\n        display:'flex',\n        flexDirection:'row',\n        justifyContent:'flex-start',\n        flexWrap:'wrap',   \n        marginBottom: theme.spacing(0.5),\n    },\n    time:{\n        marginBottom: theme.spacing(0.5),\n        marginLeft: theme.spacing(0.5)\n    },\n    mainTemp:{\n        display:'flex',\n        flexWrap:'wrap',\n        justifyContent:'space-between',\n        marginBottom: theme.spacing(1),\n    },\n    maxMinTemp:{\n        marginBottom: theme.spacing(1),\n        marginLeft: theme.spacing(0.5)\n    },\n    desc:{\n        display:'flex',\n        flexDirection:'row',\n        justifyContent:'center'\n    },\n    media: {\n      height: 200,\n    },\n    feelsLike:{\n        marginBottom: theme.spacing(2),\n        marginLeft: theme.spacing(0.5)\n    },\n    row:{\n        marginLeft: theme.spacing(0.5),\n        marginBottom: theme.spacing(0.25),\n        display:'flex',\n        flexWrap:'wrap',\n        justifyContent:'space-between',\n    }\n  }))\n\n\nconst HeaderImage = ({day, description}) =>{\n    const classes = useStyles();\n    if(description===\"Clear\"){\n        if(day){\n            return(\n                <CardMedia\n                    className={classes.media}\n                    image=\"https://images.unsplash.com/photo-1520175480921-4edfa2983e0f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\"\n                    title=\"Weather image\"\n                />\n            )\n        }\n        else{\n            return(\n                <CardMedia\n                    className={classes.media}\n                    image=\"https://images.unsplash.com/photo-1499623838158-29acea518eaa?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\"\n                    title=\"Weather image\"\n                />\n            )\n        }\n    }\n    else if(description===\"Rain\"){\n        return(\n            <CardMedia\n                className={classes.media}\n                image=\"https://images.unsplash.com/photo-1468476396571-4d6f2a427ee7?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\"\n                title=\"Weather image\"\n            />\n        )\n    }\n    else if(description===\"Haze\" || description===\"Mist\" || description===\"Smoke\"){\n        return(\n            <CardMedia\n                className={classes.media}\n                image=\"https://images.unsplash.com/photo-1532300481631-0bc14f3b7699?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\"\n                title=\"Weather image\"\n            />\n        )\n    }\n    else if(description===\"Thunderstorm\"){\n        return(\n            <CardMedia\n                className={classes.media}\n                image=\"https://images.unsplash.com/photo-1598822200977-c1ba2ff2e63b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\"\n                title=\"Weather image\"\n            />\n        )\n    }\n    else if(description===\"Clouds\"){\n        if(day){\n            return(\n                <CardMedia\n                    className={classes.media}\n                    image=\"https://images.unsplash.com/photo-1567686276517-aaca8166b4ba?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\"\n                    title=\"Weather image\"\n                />\n            )\n        }\n        else{\n            return(\n                <CardMedia\n                    className={classes.media}\n                    image=\"https://images.unsplash.com/photo-1576668778848-93c8b6436c5d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\"\n                    title=\"Weather image\"\n            />\n            )\n        }\n    }\n\n    else{\n        if(day){\n            return(\n                <CardMedia\n                    className={classes.media}\n                    image=\"https://images.unsplash.com/photo-1556326059-3cfc41f90fb1?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\"\n                    title=\"Weather image\"\n                />\n            )\n        }\n        else{\n            return(\n                <CardMedia\n                    className={classes.media}\n                    image=\"https://images.unsplash.com/photo-1514729797186-944d57303199?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\"\n                    title=\"Weather image\"\n                />\n            )\n        }\n    }\n}\n\n\n\nexport default function CardWeather({ weather }){\n    const classes = useStyles();\n    return(\n        <div className={classes.root}>\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                >\n                    <Grid item xs={10} sm={8} md={5}>\n                        <Card>\n                            <HeaderImage day = {weather.day} description= {weather.description}/>\n                            <CardContent>\n                                <div className={classes.location}>\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{fontWeight:'400', marginRight:'4px'}}>\n                                    {weather.name}, {weather.country}\n                                    </Typography>\n                                    {/* <div classNam=\"flag\">\n                                        <img className=\"flag-icon\" src={`https://www.countryflags.io/${weather.country}/flat/32.png`}/>\n                                    </div> */}\n                                    <Avatar className={classes.flagIcon} alt={weather.ca} src={`https://disease.sh/assets/img/flags/${weather.country.toLowerCase()}.png`}/>\n                                </div>\n                                <div className={classes.time}>\n                                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                                    {weather.localTime}\n                                    </Typography>\n                                </div>\n                                <div className={classes.maxMinTemp}>\n                                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                                    Day {weather.maxTemp}{weather.unit}  -  Night {weather.minTemp}{weather.unit}\n                                    </Typography>\n                                </div>\n                                <div className={classes.mainTemp}>\n                                    <Typography variant=\"h2\" color=\"textSecondary\">\n                                    {weather.temp}{weather.unit}\n                                    </Typography>\n                                    <div className=\"weather-description\">\n                                        <WeatherIcon description = {weather.description} day = {weather.day}/>\n                                        <div className={classes.desc}>\n                                            <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                                            {weather.description}\n                                            </Typography>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className={classes.row}>\n                                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                                        Humidity: {weather.humidity}%\n                                    </Typography>\n                                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                                        Precip: {weather.precipitation}%\n                                    </Typography>\n                                </div>\n                                <div className={classes.row}>\n                                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                                        Wind: {weather.windSpeed} {weather.unit2}, {weather.direction}\n                                    </Typography>\n                                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                                        Pressure: {weather.pressure}\n                                    </Typography>\n                                </div>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                </Grid>\n        </div>\n    )\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Avatar from '@material-ui/core/Avatar';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Skeleton from '@material-ui/lab/Skeleton'\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport WeatherIcon from './weatherIcon';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginBottom:theme.spacing(5),\n    },\n}))\n\nconst CardLoading = () => {\n    const classes = useStyles();\n    return(\n        <div className={classes.root}>\n             <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                >\n                <Grid item xs={10} sm={8} md={5}>\n                    <Card>\n                        <Skeleton variant=\"rect\" animation=\"wave\" height={200} width=\"100%\" style={{ marginBottom: 6 }} />\n                         <CardContent>\n                                <React.Fragment>\n                                    <div style={{marginBottom:\"10px\"}}>\n                                        <Skeleton animation=\"wave\" height={20} width=\"40%\"/>\n                                        <Skeleton animation=\"wave\" height={10} width=\"30%\" />\n                                        <Skeleton animation=\"wave\" height={10} width=\"30%\" />\n                                    </div>\n                                    <div style={{marginBottom:\"10px\"}}>\n                                        <Skeleton animation=\"wave\" height={30} width=\"100%\"/>\n                                        <Skeleton animation=\"wave\" height={10} width=\"100%\" />\n                                        <Skeleton animation=\"wave\" height={10} width=\"100%\" />\n                                    </div>\n                                    <div style={{marginBottom:\"10px\"}}>\n                                        <Skeleton animation=\"wave\" height={10} width=\"100%\" />\n                                        <Skeleton animation=\"wave\" height={10} width=\"100%\" />\n                                        <Skeleton animation=\"wave\" height={10} width=\"100%\" />\n                                    </div>\n                                    <div style={{marginBottom:\"10px\"}}>\n                                        <Skeleton animation=\"wave\" height={10} width=\"100%\" />\n                                        <Skeleton animation=\"wave\" height={10} width=\"100%\" />\n                                        <Skeleton animation=\"wave\" height={10} width=\"100%\" />\n                                    </div>\n                                    <div style={{marginBottom:\"5px\"}}>\n                                        <Skeleton animation=\"wave\" height={10} width=\"100%\" />\n                                        <Skeleton animation=\"wave\" height={10} width=\"100%\" />\n                                        <Skeleton animation=\"wave\" height={10} width=\"100%\" />\n                                    </div>\n                                    <div style={{marginBottom:\"5px\"}}>\n                                        <Skeleton animation=\"wave\" height={10} width=\"100%\" />\n                                        <Skeleton animation=\"wave\" height={10} width=\"100%\" />\n                                        <Skeleton animation=\"wave\" height={10} width=\"100%\" />\n                                    </div>\n                                </React.Fragment>\n                            </CardContent>\n                    </Card>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default CardLoading;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles'\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport blue from '@material-ui/core/colors/blue';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n    },\n    radioContainer:{\n      display:'flex',\n      flexDirection:'row'\n    },\n    text:{\n        fontWeight:600,\n        color:\"primary\"\n    },\n  }));\n\n  export default function UnitOptions({ props }){\n    const classes = useStyles();\n    return(\n        <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            className= {classes.container}\n            >\n                <FormControl component=\"fieldset\">\n                    <RadioGroup className={classes.radioContainer} aria-label=\"unit\" name=\"unit1\" value={props.unit} onChange={props.handleChange}>\n                        <FormControlLabel \n                            className={classes.text} \n                            value=\"metric\" \n                            control={<Radio \n                                color=\"primary\"\n                                disableRipple\n                                classes={{root: classes.radio, checked: classes.checked}}\n                                />} \n                            label=\"°C\" />\n                        <FormControlLabel \n                        className={classes.text} \n                        value=\"imperial\" \n                        control={<Radio \n                            color=\"primary\"\n                            disableRipple\n                            classes={{root: classes.radio, checked: classes.checked}}\n                        />} \n                        label=\"°F\" />\n                    </RadioGroup>\n                </FormControl>\n        </Grid>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport SearchBar from './comps/searchBar';\nimport CardWeather from './comps/cardWeather';\nimport CardLoading from './comps/cardLoading';\nimport UnitOptions from './comps/unitOptions';\n\nconst api= {\n  key:\"ce50fd0f772786ff9691170871093723\",\n  base:\"https://api.openweathermap.org/data/2.5/forecast\"\n}\n\n\nfunction App() {\n  const initialState= {\n    name:\"\",\n    country: \"\",\n    temp: 0,\n    minTemp: 0,\n    maxTemp: 0,\n    feelsLike:0,\n    humidity: 0,\n    precipitation:0,\n    description: \"\",\n    sunrise:\"\",\n    sunset:\"\",\n    windSpeed:0,\n    pressure:0,\n    forecast:[],\n    direction:\"\",\n  }\n\n  const [ query, setQuery ] = useState('');\n  const [ coordinates, setCoordinates ] = useState({lat:0,lon:0})\n  const [ day, setDay ] = useState(false)\n  const [ error, setError ] = useState(false);\n  const [ weather, setWeather] = useState(initialState);\n  const [ loading, setLoading]= useState(false);\n  const [ localTime, setLocalTime ] = useState(\"\")\n  const [ system, setSystem ] = useState(\"metric\")\n  const [ unit, setUnit ] = useState(\"°C\")\n  const [ unit2, setUnit2 ] = useState(\"km/h\")\n\n  useEffect(() => {\n    getData()\n  },[])\n\n  const getLocationData = async() => {\n    console.log('location access enabled')\n    try{\n      await navigator.geolocation.getCurrentPosition(async(position) => {\n        console.log(position)\n        console.log(\"Latitude is :\", position.coords.latitude)\n        console.log(\"Longitude is :\", position.coords.longitude)\n\n        const latitude = (position.coords.latitude).toFixed(1)\n        const longitude = (position.coords.longitude).toFixed(1)\n\n        setCoordinates({\n          lat: Number(latitude),\n          lon: Number(longitude)\n        })\n        let res = await fetch(`${api.base}?lat=${latitude}&lon=${longitude}&units=${system}&appid=${api.key}`)\n        let result = await res.json()\n        console.log('Sunrise- '+getTime(result.city.sunrise, result.city.timezone))\n        console.log('Sunset- '+getTime(result.city.sunset, result.city.timezone))\n        \n        let direction = checkWindDirection(result.list[0].wind.deg)\n        let windSpeed = 0\n        if(system===\"metric\"){\n          windSpeed = ((result.list[0].wind.speed)*3.6).toFixed(0)\n        }\n        else{\n          windSpeed = (result.list[0].wind.speed).toFixed(0)\n        }\n        setWeather({\n          name: result.city.name,\n          country: result.city.country,\n          temp: (result.list[0].main.temp).toFixed(0),\n          minTemp: (result.list[0].main.temp_min).toFixed(0),\n          maxTemp: (result.list[0].main.temp_max).toFixed(0),\n          feelsLike: (result.list[0].main.feels_like).toFixed(0),\n          humidity: result.list[0].main.humidity,\n          description: result.list[0].weather[0].main,\n          precipitation: ((result.list[0].pop)*100).toFixed(0),\n          sunrise:getTime(result.city.sunrise, result.city.timezone),\n          sunset:getTime(result.city.sunset, result.city.timezone),\n          windSpeed: windSpeed,\n          pressure: result.list[0].main.pressure,\n          direction: direction\n        })\n        console.log(dateBuilder(result.city.timezone))\n        setQuery('')\n        setLoading(false)\n      }) \n    }\n    catch(error){\n      console.log(error)\n      setError(true)\n      setLoading(false)\n    }\n  }\n\n\n  const getData = async() => {\n    setLoading(true)\n    if(\"geolocation\" in navigator){\n      getLocationData()\n    }\n    else{\n      console.log('Location access disabled')\n      try{\n        let res = await fetch(`${api.base}?q=Mumbai&units=${system}c&appid=${api.key}`)\n        let result = await res.json()\n        console.log(result)\n        let direction = checkWindDirection(result.list[0].wind.deg)\n        let windSpeed = 0\n        if(system===\"metric\"){\n          windSpeed = ((result.list[0].wind.speed)*3.6).toFixed(0)\n        }\n        else{\n          windSpeed = (result.list[0].wind.speed).toFixed(0)\n        }\n\n        setWeather({\n          name: result.city.name,\n          country: result.city.country,\n          temp: (result.list[0].main.temp).toFixed(0),\n          minTemp: (result.list[0].main.temp_min).toFixed(0),\n          maxTemp: (result.list[0].main.temp_max).toFixed(0),\n          feelsLike: (result.list[0].main.feels_like).toFixed(0),\n          humidity: result.list[0].main.humidity,\n          description: result.list[0].weather[0].main,\n          precipitation: ((result.list[0].pop)*100).toFixed(0),\n          sunrise:getTime(result.city.sunrise, result.city.timezone),\n          sunset:getTime(result.city.sunset, result.city.timezone),\n          windSpeed: windSpeed,\n          pressure: result.list[0].main.pressure,\n          direction: direction,\n        })\n\n        console.log(dateBuilder(result.city.timezone))\n        setQuery('')\n        setLoading(false)\n      }\n      catch(error){\n        console.log(error)\n        setError(true)\n        setLoading(false)\n      }\n    }\n  }\n\n  const search = async() => {\n    console.log(query)\n\n    if(query!==\"\"){\n      setLoading(true)\n      if(!query.includes(\",\")){\n        try{\n          let res= await fetch(`${api.base}?q=${query}&units=${system}&appid=${api.key}`)\n          let result = await res.json()\n          if(result.cod===\"404\"){\n            console.log('Could not get data from API.')\n            setError(true)\n            setQuery('')\n            setLoading(false)\n          }\n          else{\n            if(error){\n              setError(false)\n            }\n            let short = query\n            setQuery('')\n            setLoading(false)\n            console.log('Sunrise- '+getTime(result.city.sunrise, result.city.timezone))\n            console.log('Sunset- '+getTime(result.city.sunset, result.city.timezone))\n            dateBuilder(result.city.timezone)\n\n            if(result.city.name.length>15){\n              result.city.name = short\n            }\n            let direction = checkWindDirection(result.list[0].wind.deg)\n            let windSpeed = 0\n            if(system===\"metric\"){\n              windSpeed = ((result.list[0].wind.speed)*3.6).toFixed(0)\n            }\n            else{\n              windSpeed = (result.list[0].wind.speed).toFixed(0)\n            }\n\n            setWeather({\n              name: result.city.name,\n              country: result.city.country,\n              temp: (result.list[0].main.temp).toFixed(0),\n              minTemp: (result.list[0].main.temp_min).toFixed(0),\n              maxTemp: (result.list[0].main.temp_max).toFixed(0),\n              feelsLike: (result.list[0].main.feels_like).toFixed(0),\n              humidity: result.list[0].main.humidity,\n              description: result.list[0].weather[0].main,\n              precipitation: ((result.list[0].pop)*100).toFixed(0),\n              sunrise:getTime(result.city.sunrise, result.city.timezone),\n              sunset:getTime(result.city.sunset, result.city.timezone),\n              windSpeed: windSpeed,\n              pressure: result.list[0].main.pressure,\n              direction:direction\n            })\n\n            console.log(result)\n          }\n        }\n        catch(error){\n          console.log('Could not get data from API.')\n          console.log(error)\n          setLoading(false)\n        }\n      }\n      else{\n        let country_code = query.slice(-2)\n        let city_name = query.slice(0,-3)\n        try{\n          let res= await fetch(`${api.base}?q=${city_name},${country_code}&units=${system}&appid=${api.key}`)\n          let result = await res.json()\n          if(result.cod===\"404\"){\n            console.log('Could not get data from API.')\n            setError(true)\n            setQuery('')\n            setLoading(false)\n          }\n          else{\n            if(error){\n              setError(false)\n            }\n            let short = query\n            setQuery('')\n            setLoading(false)\n            console.log('Sunrise- '+getTime(result.city.sunrise, result.city.timezone))\n            console.log('Sunset- '+getTime(result.city.sunset, result.city.timezone))\n            dateBuilder(result.city.timezone)\n\n            if(result.city.name.length>20){\n              result.city.name = short\n            }\n            let direction = checkWindDirection(result.list[0].wind.deg)\n            let windSpeed = 0\n            if(system===\"metric\"){\n              windSpeed = ((result.list[0].wind.speed)*3.6).toFixed(0)\n            }\n            else{\n              windSpeed = (result.list[0].wind.speed).toFixed(0)\n            }\n\n            setWeather({\n              name: result.city.name,\n              country: result.city.country,\n              temp: (result.list[0].main.temp).toFixed(0),\n              minTemp: (result.list[0].main.temp_min).toFixed(0),\n              maxTemp: (result.list[0].main.temp_max).toFixed(0),\n              feelsLike: (result.list[0].main.feels_like).toFixed(0),\n              humidity: result.list[0].main.humidity,\n              description: result.list[0].weather[0].main,\n              precipitation: ((result.list[0].pop)*100).toFixed(0),\n              sunrise:getTime(result.city.sunrise, result.city.timezone),\n              sunset:getTime(result.city.sunset, result.city.timezone),\n              windSpeed: windSpeed,\n              pressure: result.list[0].main.pressure,\n              direction:direction\n            })\n\n            console.log(result)\n          }\n        }\n        catch(error){\n          console.log('Could not get data from API.')\n          console.log(error)\n          setLoading(false)\n        }\n      }\n    }\n    else{\n      console.log(\"Could not accept input\")\n    }\n\n  }\n\n\n\n  const getTime = (time, offset) =>{\n    let local_date = new Date(time*1000)\n    let utc = (local_date.getTime() + (local_date.getTimezoneOffset()*60*1000));\n    let nd = new Date(utc+(offset*1000))\n    console.log(nd.toLocaleTimeString())\n    let suffix = nd.toLocaleTimeString().slice(-2)\n    let time_nd = nd.toLocaleTimeString().slice(0,5)\n    if(time_nd.slice(-1)===\":\"){\n      time_nd = time_nd.slice(0,-1)\n    }\n    console.log(time_nd+' '+suffix)\n    return (time_nd+' '+suffix)\n  }\n\n  const dateBuilder = (offset) => {\n    let months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    //let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let local_date = new Date()\n    let utc = (local_date.getTime() + (local_date.getTimezoneOffset()*60*1000));\n    let nd = new Date(utc+(offset*1000))\n    let day = nd.getDate()\n    let hour = nd.getHours().toString()\n    if(hour.toString().length===1){\n      hour = \"0\"+hour\n    }\n    let mins = nd.getMinutes().toString()\n    if(mins.length===1){\n      mins= \"0\"+mins\n    }\n    let month = months[nd.getMonth()]\n    console.log(nd.toLocaleTimeString())\n    console.log('Hour is: '+ nd.getHours() + ' Minutes is: '+ nd.getMinutes())\n    let suffix = nd.toLocaleTimeString().slice(-2)\n\n    if(hour > 18 || hour < 6){\n      setDay(false)\n      console.log(\"It's night\")\n    }\n    else{\n      setDay(true)\n      console.log(\"It's day\")\n    }\n    \n    let time = nd.toLocaleTimeString().slice(0,5)\n    if(time.slice(-1)===\":\"){\n      time = time.slice(0,-1)\n    }\n\n    console.log(time+' '+suffix)\n    setLocalTime(month+\" \"+ day + \", \"+ hour+\":\"+mins)\n  }\n\n\n  const checkWindDirection = (deg) => {\n    let direction=\"\"\n    if(deg>=0 && deg<45){\n      direction = \"E\"\n    }\n    else if(deg>=45 && deg<90){\n      direction = \"NE\"\n    }\n    else if(deg===90){\n      direction = \"N\"\n    }\n    else if(deg>90 && deg<=135){\n      direction = \"NW\"\n    }\n    else if(deg>135 && deg<=180){\n      direction = \"W\"\n    }\n    else if(deg>180 && deg<=225){\n      direction = \"SW\"\n    }\n    else if(deg>225 && deg<=270){\n      direction = \"S\"\n    }\n    else if(deg>270 && deg<=315){\n      direction = \"SE\"\n    }\n    else{\n      direction = \"E\"\n    }\n    return direction\n  }\n\n  const handleChange = (event) => {\n    setSystem(event.target.value)\n    if(event.target.value===\"imperial\"){\n      console.log('imperial')\n      setUnit(\"°F\")\n      setUnit2(\"mph\")\n      setWeather(weather => ({\n        ...weather,\n        temp: (((weather.temp)*1.8)+32).toFixed(0),\n        minTemp: (((weather.minTemp)*1.8)+32).toFixed(0),\n        maxTemp: (((weather.maxTemp)*1.8)+32).toFixed(0),\n        windSpeed: ((weather.windSpeed)*0.63).toFixed(0)\n      }))\n    }\n    else{\n      console.log('metric')\n      console.log('imperial')\n      setUnit(\"°C\")\n      setUnit2(\"km/h\")\n      setWeather(weather => ({\n        ...weather,\n        temp: (((weather.temp)-32)*0.56).toFixed(0),\n        minTemp: (((weather.minTemp)-32)*0.56).toFixed(0),\n        maxTemp: (((weather.maxTemp)-32)*0.56).toFixed(0),\n        windSpeed: ((weather.windSpeed)*1.6).toFixed(0)\n      }))\n    }\n  }\n\n  if(loading){\n    return(\n      <div className=\"App\">\n        <SearchBar {...{\n          props:{\n            search: search,\n            query: query,\n            setQuery: setQuery, \n            error: error\n          }\n        }}/>\n        <UnitOptions {...{\n          props:{\n            handleChange:handleChange,\n            unit: system\n          }\n        }}/>\n        <CardLoading/>\n      </div>\n    )\n  }\n\n\n  return (\n    <div className=\"App\">\n       <SearchBar {...{\n          props:{\n            search: search,\n            query: query,\n            setQuery: setQuery, \n            error: error\n          }\n        }}/>\n      <UnitOptions {...{\n          props:{\n            handleChange:handleChange,\n            unit: system\n          }\n        }}/>\n      <CardWeather {...{\n         weather:{\n          name: weather.name,\n          country: weather.country,\n          localTime: localTime,\n          description: weather.description,\n          temp: weather.temp,\n          maxTemp: weather.maxTemp,\n          minTemp: weather.minTemp,\n          humidity: weather.humidity,\n          precipitation: weather.precipitation,\n          day: day,\n          sunrise: weather.sunrise,\n          sunset: weather.sunset,\n          unit: unit,\n          windSpeed: weather.windSpeed,\n          pressure: weather.pressure,\n          unit2: unit2,\n          direction:weather.direction,\n         }\n       }}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}